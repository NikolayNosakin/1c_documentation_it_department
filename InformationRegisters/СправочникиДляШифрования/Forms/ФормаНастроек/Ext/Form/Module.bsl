
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	ЗаполнитьДерево();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(Копирование = Ложь,ПользовательИсточникКопирования = Неопределено)
	
	ДеревоНастроек = РеквизитФормыВЗначение("ДеревоНастроек_");
	ДеревоНастроек.Строки.Очистить();	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	СправочникиДляШифрования.Ссылка КАК Ссылка,
	|	ЗначенияСправочникиДляШифрования.Значение КАК Значение,
	|	СправочникиДляШифрования.ЭтоГруппа КАК ЭтоГруппа,
	|	СправочникиДляШифрования.Родитель КАК Родитель
	|ИЗ
	|	ПланВидовХарактеристик.СправочникиДляШифрования КАК СправочникиДляШифрования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СправочникиДляШифрования КАК ЗначенияСправочникиДляШифрования
	|		ПО СправочникиДляШифрования.Ссылка = ЗначенияСправочникиДляШифрования.Настройка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СправочникиДляШифрования.ЭтоГруппа ИЕРАРХИЯ,
	|	СправочникиДляШифрования.Наименование";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаНастройки = ДеревоНастроек.Строки.Найти(Выборка.Ссылка, "Настройка", Истина);
		Если СтрокаНастройки = Неопределено Тогда
			Если НЕ Выборка.Родитель.Пустая() Тогда
				// Найдем группу настройки, если ее нет, то создадим
				СтрокаГруппы = ДеревоНастроек.Строки.Найти(Выборка.Родитель, "Настройка", Истина);
				Если СтрокаГруппы = Неопределено Тогда
					СтрокаГруппы = ДеревоНастроек.Строки.Добавить();
					СтрокаГруппы.Настройка = Выборка.Родитель;
					СтрокаГруппы.ЭтоНастройка = Ложь;
				КонецЕсли;
			Иначе
				СтрокаГруппы = ДеревоНастроек;
			КонецЕсли;		
			
			СтрокаНастройки = СтрокаГруппы.Строки.Добавить();
			СтрокаНастройки.Настройка = Выборка.Ссылка;
			СтрокаНастройки.ЭтоНастройка = НЕ Выборка.ЭтоГруппа;
		КонецЕсли;
		
		ЗначениеНастройки = Выборка.Ссылка.ТипЗначения.ПривестиЗначение(Выборка.Значение);
		
		СтрокаНастройки.Значение = ЗначениеНастройки;
		
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДеревоНастроек,"ДеревоНастроек_");
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсеДерево()
	Для каждого Ид Из ДеревоНастроек_.ПолучитьЭлементы() Цикл
		Элементы.ДеревоНастроек_.Развернуть(Ид.ПолучитьИдентификатор(), Истина);
	КонецЦикла;    
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНастройки();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройки()
		
	Набор = РегистрыСведений.СправочникиДляШифрования.СоздатьНаборЗаписей();
	ДеревоНастроек = РеквизитФормыВЗначение("ДеревоНастроек_");
	ЗаполнитьНаборЗаписей(ДеревоНастроек.Строки, Набор);
	
	Набор.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей(СтрокиДерева, НаборЗаписей)
	
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		
		Если СтрокаДерева.ЭтоНастройка Тогда
			Запись = НаборЗаписей.Добавить();
			Запись.Настройка = СтрокаДерева.Настройка;
			Запись.Значение = СтрокаДерева.Настройка.ТипЗначения.ПривестиЗначение(СтрокаДерева.Значение);
		Иначе
			ЗаполнитьНаборЗаписей(СтрокаДерева.Строки, НаборЗаписей);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистрНастроек(Команда)
	ОткрытьФорму("РегистрСведений.СправочникиДляШифрования.Форма.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокНастроек(Команда)
	ОткрытьФорму("ПланВидовХарактеристик.СправочникиДляШифрования.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПароли(Команда)
	ШифрованиеДанныхКлиент.ОбработатьПароли();
КонецПроцедуры
