
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СведенияОРегламентныхЗаданиях = Новый Структура;
	ЗаполнитьСведенияОРегламентномЗадании("ОтправкаУведомленийОбОкончанииФН");
	
	// Обновление состояния элементов.
	УстановитьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	ИмяПредопределенного = "ОтправкаУведомленийОбОкончанииФН";
	Сведения = СведенияОРегламентномЗаданииКлиент(ИмяПредопределенного);
	Если Сведения.Идентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Контекст = Новый Структура;
	Контекст.Вставить("ИмяПредопределенного", ИмяПредопределенного);
	Контекст.Вставить("ФлажокИзменен", Ложь);
	Обработчик = Новый ОписаниеОповещения("РегламентныеЗаданияПослеИзмененияРасписания", ЭтотОбъект, Контекст);
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Сведения.Расписание);
	Диалог.Показать(Обработчик);
КонецПроцедуры

&НаКлиенте
Процедура РегламентныеЗаданияПослеИзмененияРасписания(Расписание, Контекст) Экспорт
	Если Расписание = Неопределено Тогда
		Если Контекст.ФлажокИзменен Тогда
			ЭтотОбъект[Контекст.ИмяФлажка] = Ложь;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Изменения = Новый Структура("Расписание", Расписание);
	Если Контекст.ФлажокИзменен Тогда
		ЭтотОбъект[Контекст.ИмяФлажка] = Истина;
		Изменения.Вставить("Использование", Истина);
	КонецЕсли;
	РегламентныеЗаданияСохранить(Контекст.ИмяПредопределенного, Изменения, Истина);
КонецПроцедуры

&НаСервере
Процедура РегламентныеЗаданияСохранить(ИмяПредопределенного, Изменения, УстановитьВидимостьДоступность)
	Сведения = СведенияОРегламентномЗадании(ИмяПредопределенного);
	Если Сведения.Идентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	РегламентныеЗаданияСервер.ИзменитьЗадание(Сведения.Идентификатор, Изменения);
	ЗаполнитьЗначенияСвойств(Сведения, Изменения);
	СведенияОРегламентныхЗаданиях.Вставить(ИмяПредопределенного, Сведения);
	Если УстановитьВидимостьДоступность Тогда
		УстановитьДоступность("РегламентноеЗадание." + ИмяПредопределенного);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "", ИндексПроверен = Ложь)
	
	//Если Истина Тогда
	Сведения = СведенияОРегламентномЗадании("ОтправкаУведомленийОбОкончанииФН");
	РасписаниеПредставление = Строка(Сведения.Расписание);
	РасписаниеПредставление = ВРег(Лев(РасписаниеПредставление, 1)) + Сред(РасписаниеПредставление, 2);
	//Иначе
	//	РасписаниеПредставление = НСтр("ru = 'Автоматическое извлечение текстов не выполняется.'");
	//КонецЕсли;
	Элементы.НастроитьРасписание.РасширеннаяПодсказка.Заголовок = РасписаниеПредставление;
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОРегламентномЗадании(ИмяПредопределенного)
	Сведения = НовыеСведенияОРегламентномЗадании();
	СведенияОРегламентныхЗаданиях.Вставить(ИмяПредопределенного, Сведения);
	Задание = РегламентныеЗаданияНайтиПредопределенное(ИмяПредопределенного);
	Если Задание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Сведения.Идентификатор = Задание.УникальныйИдентификатор;
	Сведения.Использование = Задание.Использование;
	Сведения.Расписание    = Задание.Расписание;
КонецПроцедуры

// Возвращаемое значение:
//  Структура:
//   * Идентификатор - УникальныйИдентификатор 
//   * Использование - Булево
//   * Расписание - РасписаниеРегламентногоЗадания
// 
&НаСервере
Функция НовыеСведенияОРегламентномЗадании()
	Возврат Новый Структура("Идентификатор, Использование, Расписание");
КонецФункции

// Возвращаемое значение:
//   см. НовыеСведенияОРегламентномЗадании
// 
&НаСервере
Функция СведенияОРегламентномЗадании(ИмяПредопределенного)
	Возврат СведенияОРегламентныхЗаданиях[ИмяПредопределенного];
КонецФункции

// Возвращаемое значение:
//   см. НовыеСведенияОРегламентномЗадании
// 
&НаКлиенте
Функция СведенияОРегламентномЗаданииКлиент(ИмяПредопределенного)
	Возврат СведенияОРегламентныхЗаданиях[ИмяПредопределенного];
КонецФункции

&НаСервере
Функция РегламентныеЗаданияНайтиПредопределенное(ИмяПредопределенного)
	Фильтр = Новый Структура("Метаданные", ИмяПредопределенного);
	Найденные = РегламентныеЗаданияСервер.НайтиЗадания(Фильтр);
	Возврат ?(Найденные.Количество() = 0, Неопределено, Найденные[0]);
КонецФункции

&НаКлиенте
Процедура СписокУведомляемых(Команда)
	ОткрытьФорму("РегистрСведений.док_УведомляемыеПользователиОбОкончанииФН.ФормаСписка");
КонецПроцедуры
