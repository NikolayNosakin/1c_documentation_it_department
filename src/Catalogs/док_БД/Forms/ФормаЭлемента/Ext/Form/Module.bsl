
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТипБДСервер();
	СформироватьСтрокуСоединения();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидимостьWebСервер();
КонецПроцедуры   

&НаКлиенте
Процедура ТипБДПриИзменении(Элемент)
	ТипБДСервер();
	СформироватьСтрокуСоединения();
КонецПроцедуры

&НаСервере
Процедура ТипБДСервер()	
	Если НЕ Объект.ТипБД.Пустая() Тогда 
		КлиентСерверБД = Объект.ТипБД = Перечисления.док_ТипБД.КлиентСерверная;
		Элементы.ГрСервернаяИБ.Видимость = КлиентСерверБД;
		Элементы.СУБД.Видимость = КлиентСерверБД;
		Элементы.ПутьК_БД.Видимость = НЕ КлиентСерверБД;
		Элементы.ГруппаСерверСУБД.Группировка = ?(КлиентСерверБД,ГруппировкаПодчиненныхЭлементовФормы.Вертикальная,ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликованаНаWebСервереПриИзменении(Элемент)
	ВидимостьWebСервер();
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьWebСервер()	
	Элементы.WebСервер.Видимость = Объект.ОпубликованаНаWebСервере;
	Элементы.АдресПубликации.Видимость = Объект.ОпубликованаНаWebСервере;
	Элементы.ГруппаWebПубликация.Видимость = Объект.ОпубликованаНаWebСервере;
КонецПроцедуры

&НаКлиенте
Процедура СУБДПриИзменении(Элемент)
	СУБДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СУБДПриИзмененииНаСервере()
	Объект.Контрагент = Объект.Сервер.Сервер.Контрагент;
КонецПроцедуры

&НаСервере
Процедура СформироватьСтрокуСоединения()
	Если Объект.ТипБД = Перечисления.док_ТипБД.Файловая Тогда
		СтрокаСоединения = "Connect=File=""" + Объект.ПутьК_БД + """";
	Иначе	
		СтрокаСоединения = "Connect=Srvr=""" + Объект.Сервер.Наименование + """;Ref=""" + Объект.ИмяИБ + """";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИмяИБПриИзменении(Элемент)
	СформироватьСтрокуСоединения();
	Объект.ИмяИБ_В_СУБД = ?(Объект.ИмяИБ_В_СУБД = "",Объект.ИмяИБ,Объект.ИмяИБ_В_СУБД);
КонецПроцедуры

&НаКлиенте
Процедура ПутьК_БДПриИзменении(Элемент)
	СформироватьСтрокуСоединения();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИмяИБ(Команда)
	Объект.ИмяИБ_В_СУБД = Объект.ИмяИБ;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзVRD_Файла(Команда)
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопроса",ЭтотОбъект),"Перед загрузкой табличная часть будет очищена. Продолжить?",РежимДиалогаВопрос.ОКОтмена,30,КодВозвратаДиалога.Отмена,"Заполнить таблицу из vrd файла" ,КодВозвратаДиалога.ОК);	 
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
 
	Если Результат = КодВозвратаДиалога.ОК Тогда
		ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДВФ.Фильтр = НСтр("ru = ""Текст""; en = ""Text""")+"(*.vrd)|*.vrd"; 
		ДВФ.МножественныйВыбор = Ложь; 
		ДВФ.Заголовок = "Выберите файл default.vrd";
		ФайловаяСистемаКлиент.ПоказатьДиалогВыбора( Новый ОписаниеОповещения("ФайлНачалоВыбораЗавершение",ЭтотОбъект),ДВФ);
	КонецЕсли;	
 
КонецПроцедуры

&НаКлиенте
Процедура ФайлНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
        Возврат;
	КонецЕсли;
	
    ФайлНастроек = Результат[0];
	ЧтениеXML = Новый ЧтениеXML;	
	ЧтениеXML.ОткрытьФайл(ФайлНастроек);
	Попытка
		VRD = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
		Объект.WebСервисы.Очистить();
		WebСервис = ПредопределенноеЗначение("Перечисление.док_ТипыВебСервисов.WebСервис");
		Для каждого вс из VRD.ws.point Цикл
			СтрВС = Объект.WebСервисы.Добавить();		
			СтрВС.Тип = WebСервис;
			СтрВС.Название = вс.name;		
			СтрВС.Адрес = вс.alias;
			СтрВС.Включен = ?(вс.enable = "true",Истина,Ложь);
		КонецЦикла;
		HTTPСервис = ПредопределенноеЗначение("Перечисление.док_ТипыВебСервисов.HTTPСервис");
		Для каждого вс из VRD.httpServices.service Цикл
			СтрВС = Объект.WebСервисы.Добавить();		
			СтрВС.Тип = HTTPСервис;
			СтрВС.Название = вс.name;		
			СтрВС.Адрес = вс.rootUrl;
			СтрВС.Включен = ?(вс.enable = "true",Истина,Ложь);
		КонецЦикла;
	Исключение
		ОбщегоНазначенияКлиент.СообщитьПользователю("Ошибка чтения файла.");
	КонецПопытки;		
	
КонецПроцедуры

