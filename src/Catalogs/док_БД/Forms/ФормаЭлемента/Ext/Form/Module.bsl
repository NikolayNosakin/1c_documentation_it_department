
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТипБДСервер();
	СформироватьСтрокуСоединения();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидимостьWebСервер();
КонецПроцедуры   

&НаКлиенте
Процедура ТипБДПриИзменении(Элемент)
	ТипБДСервер();
	СформироватьСтрокуСоединения();
КонецПроцедуры

&НаСервере
Процедура ТипБДСервер()	
	Если НЕ Объект.ТипБД.Пустая() Тогда 
		КлиентСерверБД = Объект.ТипБД = Перечисления.док_ТипБД.КлиентСерверная;
		Элементы.ГрСервернаяИБ.Видимость = КлиентСерверБД;
		Элементы.СУБД.Видимость = КлиентСерверБД;
		Элементы.ПутьК_БД.Видимость = НЕ КлиентСерверБД;
		Элементы.ГруппаСерверСУБД.Группировка = ?(КлиентСерверБД,ГруппировкаПодчиненныхЭлементовФормы.Вертикальная,ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликованаНаWebСервереПриИзменении(Элемент)
	ВидимостьWebСервер();
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьWebСервер()	
	Элементы.WebСервер.Видимость = Объект.ОпубликованаНаWebСервере;
	Элементы.АдресПубликации.Видимость = Объект.ОпубликованаНаWebСервере;
	Элементы.ГруппаWebПубликация.Видимость = Объект.ОпубликованаНаWebСервере;
КонецПроцедуры

&НаКлиенте
Процедура СУБДПриИзменении(Элемент)
	СУБДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СУБДПриИзмененииНаСервере()
	Объект.Контрагент = Объект.Сервер.Сервер.Контрагент;
КонецПроцедуры

&НаСервере
Процедура СформироватьСтрокуСоединения()
	Если Объект.ТипБД = Перечисления.док_ТипБД.Файловая Тогда
		СтрокаСоединения = "Connect=File=""" + Объект.ПутьК_БД + """";
	Иначе	
		СтрокаСоединения = "Connect=Srvr=""" + Объект.Сервер.Наименование + """;Ref=""" + Объект.ИмяИБ + """";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИмяИБПриИзменении(Элемент)
	СформироватьСтрокуСоединения();
	Объект.ИмяИБ_В_СУБД = ?(Объект.ИмяИБ_В_СУБД = "",Объект.ИмяИБ,Объект.ИмяИБ_В_СУБД);
КонецПроцедуры

&НаКлиенте
Процедура ПутьК_БДПриИзменении(Элемент)
	СформироватьСтрокуСоединения();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИмяИБ(Команда)
	Объект.ИмяИБ_В_СУБД = Объект.ИмяИБ;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзVRD_Файла(Команда)
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопросаVRD",ЭтотОбъект),"Перед загрузкой табличная часть будет очищена. Продолжить?",РежимДиалогаВопрос.ОКОтмена,30,КодВозвратаДиалога.Отмена,"Заполнить таблицу из vrd файла" ,КодВозвратаДиалога.ОК);	 
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаVRD(Результат, Параметры) Экспорт
 
	Если Результат = КодВозвратаДиалога.ОК Тогда
		ПараметрыДиалога = Новый Структура;
		ПараметрыДиалога.Вставить("Заголовок", НСтр("Выберите файл default.vrd"));
		ПараметрыДиалога.Вставить("Фильтр", НСтр("ru = ""Текст""; en = ""Text""")+"(*.vrd)|*.vrd");
		ОбменДаннымиКлиент.ВыбратьИПередатьФайлНаСервер(Новый ОписаниеОповещения("ФайлVRDНачалоВыбораЗавершение",ЭтотОбъект),ПараметрыДиалога,УникальныйИдентификатор);
	КонецЕсли;	
 
КонецПроцедуры

&НаКлиенте
Процедура ФайлVRDНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Адрес = Результат.Хранение;
	ТекстОшибки = Результат.ОписаниеОшибки;
	ИмяВыбранногоФайла = Результат.Имя;
	
	Если ПустаяСтрока(ТекстОшибки) И ПустаяСтрока(Адрес) Тогда
    	Возврат;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;		
	КонецЕсли;
	
	ВыполнитьЗагрузкуVRDНаСервере(Адрес);

КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузкуVRDНаСервере(Адрес)
	
	Данные = ПолучитьИзВременногоХранилища(Адрес);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("vrd");
	Данные.Записать(ИмяВременногоФайла);
	
	ЧтениеXML = Новый ЧтениеXML;	
	ЧтениеXML.ОткрытьФайл(ИмяВременногоФайла);
	Попытка
		VRD = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
		Объект.WebСервисы.Очистить();		
		WebСервис = ПредопределенноеЗначение("Перечисление.док_ТипыВебСервисов.WebСервис");
		Попытка
			Для каждого вс из VRD.ws.point Цикл
				СтрВС = Объект.WebСервисы.Добавить();		
				СтрВС.Тип = WebСервис;
				СтрВС.Название = вс.name;		
				СтрВС.Адрес = вс.alias;
				СтрВС.Включен = ?(вс.enable = "true",Истина,Ложь);
			КонецЦикла;
		Исключение КонецПопытки;
		HTTPСервис = ПредопределенноеЗначение("Перечисление.док_ТипыВебСервисов.HTTPСервис");
		Попытка
			Для каждого вс из VRD.httpServices.service Цикл
				СтрВС = Объект.WebСервисы.Добавить();		
				СтрВС.Тип = HTTPСервис;
				СтрВС.Название = вс.name;		
				СтрВС.Адрес = вс.rootUrl;
				СтрВС.Включен = ?(вс.enable = "true",Истина,Ложь);
			КонецЦикла;
		Исключение КонецПопытки;
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Ошибка чтения файла.");
	КонецПопытки;
	
	Попытка	
		УдалитьФайлы(ИмяВременногоФайла);		
	Исключение КонецПопытки;
	
КонецПроцедуры	
	
