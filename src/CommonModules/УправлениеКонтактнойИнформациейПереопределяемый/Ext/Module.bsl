///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Изменяет, добавляет, удаляет стандартные команды контактной информации, отображаемые в справочниках и документах,
// Вкл./Выкл. отображение иконок контактной информации слева от заголовка вида контактной информации,
// Изменяет положение кнопки Добавить дополнительное поле контактной информации,
// Изменяет ширину поля комментарий для полей контактной информации с типами Телефон, АдресЭлектроннойПочты, Skype,
// ВебСтраница, Факс
//
// Параметры:
//  Настройки - Структура:
//    * ОтображатьИконки - Булево
//    * ОписаниеКоманд - см. УправлениеКонтактнойИнформацией.ОписаниеКоманд
//    * ПоложениеКнопкиДобавить - ГоризонтальноеПоложениеЭлемента - допустимые значения: Лево, Право, Авто.
//                                                                  Лево - Безусловное положение слева.
//                                                                  Право - Безусловное положение слева.
//                                                                  Авто - Располагается справа, когда контактная
//                                                                         информация в виде поля. Располагается слева,
//                                                                         когда контактная информация в виде
//                                                                         гиперссылки, или ни одно поле контактной
//                                                                         информации не выведено в группе.
//    * ШиринаПоляКомментарий - Число - ширина поля комментарий для полей контактной информации с типами Телефон, АдресЭлектроннойПочты,
//                                      Skype, ВебСтраница, Факс. Данный параметр устанавливается только когда группа
//                                      контактной информации ограничена по ширине.
//
//  Пример:
//     Настройки.ОтображатьИконки = Истина;
//     Настройки.ШиринаПоляКомментарий = 10;
//     Настройки.ПоложениеКнопкиДобавить = ГоризонтальноеПоложениеЭлемента.Авто;
//
//     Адрес = Перечисления.ТипыКонтактнойИнформации.Адрес;
//     Настройки.ОписаниеКоманд[Адрес].ЗапланироватьВстречу.Заголовок  = НСтр("ru='Встреча'");
//     Настройки.ОписаниеКоманд[Адрес].ЗапланироватьВстречу.Подсказка  = НСтр("ru='Создать событие встречи'");
//     Настройки.ОписаниеКоманд[Адрес].ЗапланироватьВстречу.Картинка   = БиблиотекаКартинок.ЗапланированноеВзаимодействие;
//     Настройки.ОписаниеКоманд[Адрес].ЗапланироватьВстречу.Действие   = "_ДемоСтандартныеПодсистемыКлиент.ОткрытьФормуДокументаВстреча";
//    
//     _ДемоФактическийАдресОрганизации = УправлениеКонтактнойИнформацией.ВидКонтактнойИнформацииПоИмени("_ДемоФактическийАдресОрганизации");
//      Настройки.ОписаниеКоманд[_ДемоФактическийАдресОрганизации] = 
//    	ОбщегоНазначения.СкопироватьРекурсивно(УправлениеКонтактнойИнформацией.КомандыТипаКонтактнойИнформации(Перечисления.ТипыКонтактнойИнформации.Адрес));
//      Настройки.ОписаниеКоманд[_ДемоФактическийАдресОрганизации].ЗапланироватьВстречу.Действие = ""; // Отключение действия команды для вида
//
//   Процедурам, указанных в свойстве Действие, передаются 2 параметра:
//       КонтактнаяИнформация - Структура:
//         * Представление - Строка
//         * Значение      - Строка
//         * Тип           - ПеречислениеСсылка.ТипыКонтактнойИнформации
//         * Вид           - СправочникСсылка.ВидыКонтактнойИнформации
//       ДополнительныеПараметры - Структура:        
//         * ВладелецКонтактнойИнформации - ОпределяемыйТип.ВладелецКонтактнойИнформации.
//         * Форма - ФормаКлиентскогоПриложения - форма объекта-владельца, предназначенная для вывода контактной информации.
//
//   Пример: 
//     Процедура ОткрытьФормуДокументаВстреча(КонтактнаяИнформация, ДополнительныеПараметры) Экспорт
//		  ЗначенияЗаполнения = Новый Структура;
//		  ЗначенияЗаполнения.Вставить("МестоПроведенияВстречи", КонтактнаяИнформация.Представление);
//		  Если ТипЗнч(ДополнительныеПараметры.ВладелецКонтактнойИнформации) = Тип("ДокументСсылка._ДемоЗаказПокупателя") Тогда
//		    	ЗначенияЗаполнения.Вставить("Предмет", ДополнительныеПараметры.ВладелецКонтактнойИнформации);
//		    	ЗначенияЗаполнения.Вставить("Контакт", "");
//		  Иначе
//		    	ЗначенияЗаполнения.Вставить("Контакт", ДополнительныеПараметры.ВладелецКонтактнойИнформации);
//		    	ЗначенияЗаполнения.Вставить("Предмет", "");
//		  КонецЕсли;
//
//		  ОткрытьФорму("Документ.Встреча.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения),
//			ДополнительныеПараметры.Форма);
//	   КонецПроцедуры
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт

	
    
КонецПроцедуры

// Получает наименования видов контактной информации на разных языках.
//
// Параметры:
//  Наименования - Соответствие из КлючИЗначение - представление вида контактной информации на переданном языке:
//     * Ключ     - Строка - имя вида контактной информации. Например, "_ДемоАдресПартнера".
//     * Значение - Строка - наименование вида контактной информации для переданного кода языка.
//  КодЯзыка - Строка - код языка. Например, "en".
//
// Пример:
//  Наименования["_ДемоАдресПартнера"] = НСтр("ru='Адрес'; en='Address';", КодЯзыка);
//
Процедура ПриПолученииНаименованийВидовКонтактнойИнформации(Наименования, КодЯзыка) Экспорт
	
	
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
// 
// Параметры:
//  Настройки - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов.Настройки
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
//
// Параметры:
//  КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//  Элементы   - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//  ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "SlackПользователя";
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Slack;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.РазрешитьВводНесколькихЗначений   = Истина;
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникПользователи;
	Элемент.ИдентификаторДляФормул = "Slack";
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.Используется = Истина;
	Элемент.РеквизитДопУпорядочивания = 3;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Slack'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Slack'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "TelegramПользователя";
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Telegram;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.РазрешитьВводНесколькихЗначений   = Истина;
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникПользователи;
	Элемент.ИдентификаторДляФормул = "Telegram";
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.Используется = Истина;
	Элемент.РеквизитДопУпорядочивания = 4;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Telegram'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Telegram'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Справочникдок_Контрагенты";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = Истина;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Контактная информация справочника ""Пользователи""'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Контактная информация справочника ""Контрагенты""'", 
		ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АдресКлиента";
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.РазрешитьВводНесколькихЗначений   = Истина;
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.Справочникдок_Контрагенты;
	Элемент.ИдентификаторДляФормул = "Адрес";
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.Используется = Истина;
	Элемент.РеквизитДопУпорядочивания = 4;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Адрес'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Адрес'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонКлиента";
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.РазрешитьВводНесколькихЗначений   = Истина;
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.Справочникдок_Контрагенты;
	Элемент.ИдентификаторДляФормул = "Телефон";
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.Используется = Истина;
	Элемент.РеквизитДопУпорядочивания = 3;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Телефон'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "EmailКлиента";
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.РазрешитьВводНесколькихЗначений   = Истина;
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.Справочникдок_Контрагенты;
	Элемент.ИдентификаторДляФормул = "Email";
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.Используется = Истина;
	Элемент.РеквизитДопУпорядочивания = 3;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Email'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Email'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Справочникдок_КонтактныеЛицаКонтрагентов";
	Элемент.ЭтоГруппа = Истина;
	Элемент.Используется = Истина;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Контактная информация справочника ""Пользователи""'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Контактная информация справочника ""Контрагенты""'", 
		ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДобавочныйКонтактногоЛица";
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.РазрешитьВводНесколькихЗначений   = Истина;
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.Справочникдок_КонтактныеЛицаКонтрагентов;
	Элемент.ИдентификаторДляФормул = "Добавочный";
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.Используется = Истина;
	Элемент.РеквизитДопУпорядочивания = 3;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Добавочный'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Добавочный'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонКонтактногоЛица";
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.РазрешитьВводНесколькихЗначений   = Истина;
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.Справочникдок_КонтактныеЛицаКонтрагентов;
	Элемент.ИдентификаторДляФормул = "Телефон";
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.Используется = Истина;
	Элемент.РеквизитДопУпорядочивания = 3;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Телефон'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Телефон'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;	
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "EmailКонтактногоЛица";
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Элемент.МожноИзменятьСпособРедактирования = Истина;
	Элемент.РазрешитьВводНесколькихЗначений   = Истина;
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.Справочникдок_КонтактныеЛицаКонтрагентов;
	Элемент.ИдентификаторДляФормул = "Email";
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.Используется = Истина;
	Элемент.РеквизитДопУпорядочивания = 3;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
		МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
		МодульМультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", 
		"ru = 'Email'", КодыЯзыков); // @НСтр-1
	Иначе
		Элемент.Наименование = НСтр("ru = 'Email'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;	
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
//
// Параметры:
//  Объект                  - СправочникОбъект.РолиИсполнителей - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения объекта.
//  ДополнительныеПараметры - Структура:
//   * ПредопределенныеДанные - ТаблицаЗначений - данные заполненные в процедуре ПриНачальномЗаполненииЭлементов.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

#КонецОбласти
