
Процедура РазослатьСообщения() Экспорт

	АдресСервера = "slack.com";	
	api = "api/chat.postMessage?token=";
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый запрос("ВЫБРАТЬ ПЕРВЫЕ 10
	|	Slack_ИсторияСообщений.Период КАК Период,
	|	Slack_ИсторияСообщений.UserID КАК channel,
	|	Slack_ИсторияСообщений.Сообщение КАК text,
	|	Slack_ИсторияСообщений.Bot КАК Bot
	|ИЗ
	|	РегистрСведений.Slack_ИсторияСообщений КАК Slack_ИсторияСообщений
	|ГДЕ
	|	Slack_ИсторияСообщений.Отправлено = ЛОЖЬ");
	Таб = Запрос.Выполнить().Выгрузить();
	Для каждого стр из Таб Цикл
		
		Если стр.Bot.Token = "" Тогда
			//Сообщить("Токен бота не указан");
			Продолжить
		КонецЕсли;
				
		Структура = Новый Структура("channel,text",стр.channel,стр.text);	
		
		Ошибка = Ложь;
		ОшибкаСообщение = "";
		SlackURL = api + стр.Bot.Token;
		Тело = "";	
		Для Каждого Зн Из Структура Цикл
			Если Зн.Значение <> "" тогда
				Тело = Тело + "&" + Зн.Ключ + "=" + КодироватьСтроку(Зн.Значение, СпособКодированияСтроки.КодировкаURL, КодировкаТекста.UTF8);
			КонецЕсли;
		КонецЦикла;
		
		HTTPЗапрос = Новый HTTPЗапрос;                                                               
		HTTPЗапрос.АдресРесурса = SlackURL;
		HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded;");
		HTTPЗапрос.УстановитьТелоИзСтроки(Тело, "Windows-1251");
		
		Соединение = Новый HTTPСоединение(АдресСервера,,,,, 5, Новый ЗащищенноеСоединениеOpenSSL);
		
		Попытка 
			ОтветHTTP = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
		Исключение
			Попытка
				ОтветHTTP = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
			Исключение
				ОшибкаСообщение = ОписаниеОшибки() + Символы.ПС;
				Ошибка = Истина;
			КонецПопытки;
		КонецПопытки;
		
		Если НЕ Ошибка Тогда
			Ответ = ОтветHTTP.ПолучитьТелоКакСтроку();		
			Если Найти(Ответ, "ok") = 0 Тогда
				Ошибка = Истина;					
			КонецЕсли;
			ОшибкаСообщение = ОшибкаСообщение +  "Код ответа сервера: " + Ответ;
		КонецЕсли;
		
		Структура.Вставить("Bot",стр.Bot);
		Структура.Вставить("Период",стр.Период);
		Структура.Вставить("Ошибка",Ошибка);
		Структура.Вставить("ОшибкаСообщение",ОшибкаСообщение);
		
		ЗаписатьИсторию(Структура);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОтправитьСообщение(Структура) Экспорт

	АдресСервера = "slack.com";	
	api = "api/chat.postMessage?token=";
	УстановитьПривилегированныйРежим(Истина);
	token = Константы.SlackBotToken.Получить();	
	Если token = "" Тогда
		Сообщить("Токен бота не указан");
		Возврат
	КонецЕсли;
	
	Ошибка = Ложь;
	ОшибкаСообщение = "";
	SlackURL = api + token;
	Тело = "";	
    Для Каждого Зн Из Структура Цикл
		Если Зн.Значение <> "" тогда
			Тело = Тело + "&" + Зн.Ключ + "=" + КодироватьСтроку(Зн.Значение, СпособКодированияСтроки.КодировкаURL, КодировкаТекста.UTF8);
		КонецЕсли;
	КонецЦикла;
	
	HTTPЗапрос = Новый HTTPЗапрос;                                                               
    HTTPЗапрос.АдресРесурса = SlackURL;
    HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded;");
    HTTPЗапрос.УстановитьТелоИзСтроки(Тело, "Windows-1251");

    Соединение = Новый HTTPСоединение(АдресСервера,,,,, 5, Новый ЗащищенноеСоединениеOpenSSL);
		
	Попытка 
		ОтветHTTP = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
    Исключение
        Попытка
			ОтветHTTP = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
        Исключение
			ОшибкаСообщение = ОписаниеОшибки() + Символы.ПС;
            Ошибка = Истина;
        КонецПопытки;
    КонецПопытки;
	
	Если НЕ Ошибка Тогда
		Ответ = ОтветHTTP.ПолучитьТелоКакСтроку();		
		Если Найти(Ответ, "ok") = 0 Тогда
			Ошибка = Истина;					
		КонецЕсли;
		ОшибкаСообщение = ОшибкаСообщение +  "Код ответа сервера: " + Ответ;
	КонецЕсли;
	Структура.Вставить("Ошибка",Ошибка);
	Структура.Вставить("ОшибкаСообщение",ОшибкаСообщение);
	ЗаписатьИсторию(Структура);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗаписатьИсторию(Структура) Экспорт
	
	НоваяЗапись = РегистрыСведений.Slack_ИсторияСообщений.СоздатьМенеджерЗаписи();
	НоваяЗапись.Период = Структура.Период;
	НоваяЗапись.Bot = Структура.Bot;
	НоваяЗапись.UserID = Структура.channel;
	НоваяЗапись.Сообщение = Структура.text;
	НоваяЗапись.Отправлено = НЕ Структура.Ошибка;
	НоваяЗапись.КодОтвета = Структура.ОшибкаСообщение;
	НоваяЗапись.Записать(Истина);
	
КонецПРоцедуры	

Функция ПолучитьСтруктуруСообщения() Экспорт
	
	Структура = Новый Структура;
	Структура.Вставить("channel","");
	Структура.Вставить("text","");
	Структура.Вставить("as_user","");
	Структура.Вставить("attachments","");
	Структура.Вставить("blocks","");  
	Структура.Вставить("icon_emoji","");
	Структура.Вставить("icon_url","");
	Структура.Вставить("link_names","");
	Структура.Вставить("mrkdwn","");
	Структура.Вставить("parse","");
	Структура.Вставить("reply_broadcast","");
	Структура.Вставить("thread_ts","");
	Структура.Вставить("unfurl_links","");
	Структура.Вставить("unfurl_media","");
	Структура.Вставить("username","");
	Возврат Структура
	
КонецФункции	                           
